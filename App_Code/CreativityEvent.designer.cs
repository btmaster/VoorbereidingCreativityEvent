#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
public partial class CreativityEventDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertEvent(Event instance);
  partial void UpdateEvent(Event instance);
  partial void DeleteEvent(Event instance);
  partial void InsertUser(User instance);
  partial void UpdateUser(User instance);
  partial void DeleteUser(User instance);
  #endregion
	
	public CreativityEventDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public CreativityEventDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CreativityEventDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CreativityEventDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CreativityEventDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Event> Events
	{
		get
		{
			return this.GetTable<Event>();
		}
	}
	
	public System.Data.Linq.Table<User> Users
	{
		get
		{
			return this.GetTable<User>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Events")]
public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _naam;
	
	private string _informatie;
	
	private System.DateTime _datum;
	
	private System.Nullable<int> _visitors;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnaamChanging(string value);
    partial void OnnaamChanged();
    partial void OninformatieChanging(string value);
    partial void OninformatieChanged();
    partial void OndatumChanging(System.DateTime value);
    partial void OndatumChanged();
    partial void OnvisitorsChanging(System.Nullable<int> value);
    partial void OnvisitorsChanged();
    #endregion
	
	public Event()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string naam
	{
		get
		{
			return this._naam;
		}
		set
		{
			if ((this._naam != value))
			{
				this.OnnaamChanging(value);
				this.SendPropertyChanging();
				this._naam = value;
				this.SendPropertyChanged("naam");
				this.OnnaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_informatie", DbType="VarChar(200)")]
	public string informatie
	{
		get
		{
			return this._informatie;
		}
		set
		{
			if ((this._informatie != value))
			{
				this.OninformatieChanging(value);
				this.SendPropertyChanging();
				this._informatie = value;
				this.SendPropertyChanged("informatie");
				this.OninformatieChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datum", DbType="Date NOT NULL")]
	public System.DateTime datum
	{
		get
		{
			return this._datum;
		}
		set
		{
			if ((this._datum != value))
			{
				this.OndatumChanging(value);
				this.SendPropertyChanging();
				this._datum = value;
				this.SendPropertyChanged("datum");
				this.OndatumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visitors", DbType="Int")]
	public System.Nullable<int> visitors
	{
		get
		{
			return this._visitors;
		}
		set
		{
			if ((this._visitors != value))
			{
				this.OnvisitorsChanging(value);
				this.SendPropertyChanging();
				this._visitors = value;
				this.SendPropertyChanged("visitors");
				this.OnvisitorsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _naam;
	
	private string _voornaam;
	
	private string _email;
	
	private string _gebruikersnaam;
	
	private string _wachtwoord;
	
	private string _rol;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnaamChanging(string value);
    partial void OnnaamChanged();
    partial void OnvoornaamChanging(string value);
    partial void OnvoornaamChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OngebruikersnaamChanging(string value);
    partial void OngebruikersnaamChanged();
    partial void OnwachtwoordChanging(string value);
    partial void OnwachtwoordChanged();
    partial void OnrolChanging(string value);
    partial void OnrolChanged();
    #endregion
	
	public User()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naam", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string naam
	{
		get
		{
			return this._naam;
		}
		set
		{
			if ((this._naam != value))
			{
				this.OnnaamChanging(value);
				this.SendPropertyChanging();
				this._naam = value;
				this.SendPropertyChanged("naam");
				this.OnnaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voornaam", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string voornaam
	{
		get
		{
			return this._voornaam;
		}
		set
		{
			if ((this._voornaam != value))
			{
				this.OnvoornaamChanging(value);
				this.SendPropertyChanging();
				this._voornaam = value;
				this.SendPropertyChanged("voornaam");
				this.OnvoornaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gebruikersnaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string gebruikersnaam
	{
		get
		{
			return this._gebruikersnaam;
		}
		set
		{
			if ((this._gebruikersnaam != value))
			{
				this.OngebruikersnaamChanging(value);
				this.SendPropertyChanging();
				this._gebruikersnaam = value;
				this.SendPropertyChanged("gebruikersnaam");
				this.OngebruikersnaamChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wachtwoord", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string wachtwoord
	{
		get
		{
			return this._wachtwoord;
		}
		set
		{
			if ((this._wachtwoord != value))
			{
				this.OnwachtwoordChanging(value);
				this.SendPropertyChanging();
				this._wachtwoord = value;
				this.SendPropertyChanged("wachtwoord");
				this.OnwachtwoordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rol", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string rol
	{
		get
		{
			return this._rol;
		}
		set
		{
			if ((this._rol != value))
			{
				this.OnrolChanging(value);
				this.SendPropertyChanging();
				this._rol = value;
				this.SendPropertyChanged("rol");
				this.OnrolChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
